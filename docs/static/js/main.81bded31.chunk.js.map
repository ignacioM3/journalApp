{"version":3,"sources":["hooks/useForm.js","firebase/config.js","types/index.js","actions/ui.js","errors/index.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","actions/notes.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/index.js","reducers/authReducer.js","App.js","index.js"],"names":["useState","require","useForm","initialState","state","setState","reset","newState","handleInputChange","target","name","value","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","googleAuthProvider","GoogleAuthProvider","types","setError","error","type","payload","finishLoading","errors","code","msg","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","getAuth","then","user","login","uid","displayName","catch","console","message","prop","logout","LoginScreen","useDispatch","useSelector","ui","loading","msgError","formValues","className","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","log","startRegisterWithEmailPasswordName","AuthRouter","path","element","activeNote","id","note","setNotes","notes","saveNote","getState","auth","noteToFirestore","updateDoc","doc","updateNotes","deleteNote","JournalEntry","title","body","date","url","noteDate","moment","style","backgroundSize","backgroundImage","format","charAt","toUpperCase","slice","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","addDoc","collection","NotesAppBar","active","hidden","file","files","formData","FormData","append","Swal","fire","text","allowOutsideClick","didOpen","showLoading","fetch","method","response","json","result","secure_url","close","uploadFile","htmlFor","NoteScreen","activeId","useRef","useEffect","current","deleteDoc","NothingSelected","JournalScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","getDocs","forEach","push","data","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81bded31.chunk.js","sourcesContent":["const { useState } = require(\"react\");\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  \r\n    const [state, setState] = useState(initialState);\r\n  \r\n    const reset = (newState = initialState) => {\r\n        setState(newState)\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setState({\r\n            ...state,\r\n            [target.name] : target.value,\r\n        })\r\n    }\r\n\r\n    return [state, handleInputChange, reset]\r\n}\r\n","import { initializeApp } from \"firebase/app\";\r\nimport {getFirestore} from 'firebase/firestore'\r\nimport {GoogleAuthProvider} from 'firebase/auth'\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAWDzelZPcq7pNuLeSrLaBA5O2BWFRbIoc\",\r\n  authDomain: \"proyecto-react-2022-ignac.firebaseapp.com\",\r\n  projectId: \"proyecto-react-2022-ignac\",\r\n  storageBucket: \"proyecto-react-2022-ignac.appspot.com\",\r\n  messagingSenderId: \"173980909663\",\r\n  appId: \"1:173980909663:web:f80c9758af21e113eb5bea\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n//configuracion de firestore\r\n\r\nconst db = getFirestore(app)\r\n\r\n//configuracion de la autenticacion de google\r\n\r\nconst googleAuthProvider = new GoogleAuthProvider()\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider\r\n}","export const types = {\r\n    login : '[Auth] Login',\r\n    logout : '[Auth] Logout',\r\n\r\n    uiSetError : '[UI] Set Error',\r\n    uiRemoveError : '[UI] Remove Error',\r\n    uiStartLoading : '[UI] Start Loading',\r\n    uiFinishLoading : '[UI] Finish Loading',\r\n\r\n    noteAddNew : '[Notes] New note',\r\n    noteActive : '[Notes] Set active note',\r\n    notesLoad : '[Notes] Load notes',\r\n    noteUpdate : '[Notes] Update note',\r\n    noteFileUrl : '[Notes] Update image url',\r\n    noteDelete : '[Notes] Delete note',\r\n    notesLogoutCleaning : '[Notes] Logout cleaning'\r\n}","import { types } from \"../types\";\r\n\r\nexport const setError = (error) => ({\r\n    type : types.uiSetError,\r\n    payload : error\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type : types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () =>({\r\n    type : types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type : types.uiFinishLoading\r\n})","export const errors = [\r\n    {\r\n        code : 'auth/email-already-exists',\r\n        msg : \"El email ya se encuentra registrado.\"\r\n    },\r\n    {\r\n        code : 'auth/invalid-email',\r\n        msg : \"El email no es válido.\"\r\n    },\r\n    {\r\n        code : 'Firebase: Error (auth/wrong-password).',\r\n        msg : \"La contraseña es incorrecta.\"\r\n    },\r\n    {\r\n        code : 'Firebase: Error (auth/user-not-found).',\r\n        msg : \"Credenciales inválidas\"\r\n    },\r\n    {\r\n        code : 'Firebase: Access to this account has been temporarily disabled due to many failed login attempts. You can immediately restore it by resetting your password or you can try again later. (auth/too-many-requests).',\r\n        msg : \"Debido a reiterados intentos fallidos, su cuenta fue inhabilitada temporalmente. Intente más tarde\"\r\n    }\r\n]","import { signInWithPopup, getAuth, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\n\r\nimport { googleAuthProvider } from '../firebase/config';\r\nimport { types } from \"../types\";\r\nimport { finishLoading, setError, startLoading } from './ui';\r\nimport { errors } from '../errors';\r\n\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading())\r\n\r\n        signInWithEmailAndPassword(getAuth(), email, password)\r\n            .then(({ user }) => {\r\n\r\n                dispatch(login(user.uid, user.displayName))\r\n                dispatch(finishLoading())\r\n\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n                dispatch(finishLoading());\r\n\r\n                for (const prop of errors) {\r\n                    prop.code === error.message && dispatch(setError(prop.msg))\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        createUserWithEmailAndPassword(getAuth(), email, password)\r\n            .then(async ({ user }) => {\r\n\r\n                await updateProfile(user, {\r\n                    displayName: name\r\n                })\r\n\r\n                //console.log(user);\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n\r\n    return (dispatch) => {\r\n        signInWithPopup(getAuth(), googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n})\r\n\r\nexport const startLogout = () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        signOut(getAuth())\r\n            .then(() => {\r\n                dispatch(logout())\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n}\r\n\r\nexport const logout = () => ({ type: types.logout })","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'; \r\n\r\nexport const LoginScreen = () => {\r\n\r\nconst dispatch = useDispatch();\r\n\r\nconst {loading, msgError} = useSelector(state => state.ui)\r\n\r\nconst [formValues, handleInputChange] = useForm({\r\n    email : '',\r\n    password : ''\r\n})\r\n\r\nconst {email,password} = formValues;\r\n\r\nconst handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    //dispatch(login(123123,'Patito'))\r\n    dispatch(startLoginEmailPassword(email,password))\r\n\r\n}\r\n\r\nconst handleGoogleLogin = () => {\r\n    dispatch(startGoogleLogin())\r\n}\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Iniciar sesión</h3>\r\n\r\n            <form onSubmit={handleLogin}>\r\n\r\n            {\r\n                msgError && \r\n                <div className='auth__alert-error'>\r\n                    {msgError}\r\n                </div>\r\n            }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                    Ingresar\r\n                </button>\r\n\r\n                \r\n                <div className=\"auth__social-networks\">\r\n                    <p>Ingresá con tu red social</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Iniciá sesión con Google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/jounalApp/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Creá tu cuenta    \r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport validator from 'validator';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {msgError} = useSelector(state => state.ui);\r\n    //console.log(msgError);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name : 'Eric',\r\n        email : 'menaericdaniel@gmail.com',\r\n        password : '123123',\r\n        password2 : '123123'\r\n    })\r\n\r\n    const {name, email, password, password2} = formValues;\r\n\r\n\r\n    const handleRegister = (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        if(isFormValid()){\r\n            //console.log('formulario correcto');\r\n            dispatch(startRegisterWithEmailPasswordName(email,password, name))\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        switch (true) {\r\n            case name.trim().length === 0:\r\n                dispatch(setError('El nombre es requerido'))\r\n                return false;\r\n            case !validator.isEmail(email):\r\n                dispatch(setError('El email es inválido'))\r\n                return false;\r\n            case password.length < 6:\r\n                dispatch(setError('La contraseña debe tener 6 caracteres'))\r\n                return false;\r\n            case password !== password2:\r\n                dispatch(setError('Revise la verificación de la contraseña'))\r\n                return false;\r\n            default:\r\n                dispatch(removeError())\r\n                return true;\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Registro</h3>\r\n\r\n            <form onSubmit={handleRegister}>\r\n\r\n            {\r\n                msgError && \r\n                <div className='auth__alert-error'>\r\n                    {msgError}\r\n                </div>\r\n            }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Registrar\r\n                </button>\r\n\r\n               \r\n\r\n                <Link \r\n                    to=\"/jounalApp/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    ¿Estás registrado/a?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Routes>\r\n                    <Route \r\n                        path=\"/login\"\r\n                        element={ <LoginScreen/> }\r\n                    />\r\n\r\n                    <Route \r\n                        path=\"/register\"\r\n                        element={ <RegisterScreen/> }\r\n                    />\r\n\r\n               </Routes>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { addDoc, collection, deleteDoc, doc, getDocs, updateDoc } from 'firebase/firestore';\r\nimport Swal from 'sweetalert2';\r\nimport { db } from '../firebase/config';\r\nimport { types } from '../types';\r\n\r\n\r\nexport const activeNote = (id, note) => ({\r\n    \r\n    type: types.noteActive,\r\n    payload : {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\n\r\nexport const startNewNotes = () => {\r\n\r\n    return async (dispatch, getState) => {\r\n        try {\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n      \r\n            const doc = await addDoc(collection(db, `${uid}/journal/notes`), newNote)\r\n            //console.log(doc.id);\r\n            dispatch(activeNote(doc.id,newNote))\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n      \r\n    }\r\n}\r\n\r\nexport const addNewNote = (note) => ({\r\n    type :  types.noteAddNew,\r\n    payload : note\r\n\r\n})\r\n\r\nexport const loadNotes = () => {\r\n\r\n    return async (dispatch,getState) => {\r\n\r\n        try {\r\n            const {uid} = getState().auth;\r\n            const notes = [];\r\n\r\n            let query = await getDocs(collection(db,`${uid}/journal/notes`))\r\n            \r\n            query.forEach(doc => {\r\n                //console.log(doc.data());\r\n                notes.push({\r\n                    id : doc.id,\r\n                    ...doc.data()\r\n                })\r\n            })\r\n\r\n            dispatch(setNotes(notes))\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type : types.notesLoad,\r\n    payload : notes\r\n})\r\n\r\nexport const saveNote = (note) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid} = getState().auth;\r\n        \r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n        //console.log(noteToFirestore);\r\n\r\n        try {\r\n\r\n            await updateDoc(doc(db, `${uid}/journal/notes`,note.id ),noteToFirestore)\r\n            //console.log('nota actualizada??')\r\n\r\n            dispatch(updateNotes(note.id, note));\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateNotes = (id, note) => ({\r\n    type: types.noteUpdate,\r\n    payload : {\r\n        id,\r\n        note\r\n    }\r\n})\r\n\r\nexport const startDeleteNote = (id) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        try {\r\n\r\n            await deleteDoc(doc(db, `${uid}/journal/notes`,id))\r\n           //console.log('nota eliminada??')\r\n           dispatch(deleteNote(id))\r\n            \r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type :  types.noteDelete,\r\n    payload : id\r\n})\r\n\r\nexport const uploadFile = (file) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const {active} = getState().notes;\r\n        const cloudURL = 'https://api.cloudinary.com/v1_1/ignacio359/upload';\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append('upload_preset','react-journal');\r\n        formData.append('file', file);\r\n\r\n        Swal.fire({\r\n            title : 'Subiendo imagen...',\r\n            text : 'Por favor espere',\r\n            allowOutsideClick : false,\r\n            didOpen : () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n\r\n        try {\r\n            \r\n            const response = await fetch(cloudURL,{\r\n                method : 'POST',\r\n                body : formData\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            active.url = result.secure_url;\r\n\r\n            dispatch(saveNote(active));\r\n\r\n            Swal.close();\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({id,title,body,date,url}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const noteDate = moment(date);\r\n    //console.log(noteDate)\r\n\r\n\r\n    const handleNoteActive = () => {\r\n\r\n        dispatch(activeNote(id,{\r\n            title,\r\n            body,\r\n            date,\r\n            url\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer\"\r\n            onClick={handleNoteActive}\r\n        >\r\n            \r\n            <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${url})`\r\n                }}\r\n            ></div>\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd').charAt(0).toUpperCase() + noteDate.format('dddd').slice(1)}</span>\r\n                <h4>{noteDate.format('D')}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    //const entries = [1,2,3,4,5 ];\r\n\r\n    const {notes} = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id } \r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport { startNewNotes } from '../../actions/notes'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        \r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const handleNewNote = () => {\r\n        dispatch(startNewNotes())\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button \r\n                className=\"btn\"\r\n                onClick={handleLogout}\r\n                >\r\n                    Salir\r\n                </button>\r\n            </div>\r\n\r\n            <div\r\n             className=\"journal__new-entry\"\r\n             onClick={handleNewNote}\r\n             >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    Nueva nota\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />    \r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addNewNote, saveNote, uploadFile } from '../../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch(saveNote(active))\r\n        dispatch(addNewNote(active))\r\n\r\n    }\r\n\r\n    const handleFileChange = ({target}) => {\r\n        const file = target.files[0];\r\n\r\n        file && dispatch(uploadFile(file))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>9 de febrero 2022</span>\r\n\r\n                <input\r\n                    type=\"file\"\r\n                    hidden\r\n                    onChange={handleFileChange}\r\n                    id=\"fileSelector\"\r\n                    name=\"file\"\r\n                />\r\n            <div>\r\n                <label\r\n                    className='btn'\r\n                    htmlFor='fileSelector'\r\n                >\r\n                    Subir imagen\r\n                </label>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Guardar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleteNote } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { active: note } = useSelector(state => state.notes)\r\n    //console.log(note);\r\n\r\n    const activeId = useRef(note.id);\r\n    //console.log(activeId);\r\n\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n\r\n    const { title, body } = formValues;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (note.id !== activeId.current) {\r\n            reset(note)\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(activeNote(note.id, { ...formValues }))\r\n\r\n    }, [formValues, dispatch, note.id]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleteNote(note.id))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    name='title'\r\n                    placeholder=\"Escribe el título\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    name='body'\r\n                    placeholder=\"¿Qué pasó hoy?\"\r\n                    className=\"notes__textarea\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    note.url &&\r\n                    <div className=\"notes__image\">\r\n                        <img\r\n                            src={note.url}\r\n                            alt={note.id}\r\n                        />\r\n                    </div>\r\n\r\n                }\r\n\r\n                <button\r\n                    className=\"btn buttons__btn-danger mt-5 pointer\"\r\n                    onClick={handleDelete}\r\n                >\r\n                    Delete\r\n\r\n                </button>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Selecciona algo\r\n                <br />\r\n                para crear una nota!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { useSelector } from 'react-redux';\r\nimport { NothingSelected } from './NothingSelected';\r\n\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n\r\n            <Sidebar />\r\n\r\n\r\n            <main>\r\n                {\r\n                    active\r\n                    ?\r\n                    <NoteScreen />\r\n                    :\r\n                    <NothingSelected />\r\n\r\n                }\r\n\r\n            </main>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter,\r\n    Navigate,\r\n    Route,\r\n    Routes,\r\n  } from 'react-router-dom';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { loadNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(getAuth(), user => {\r\n            //console.log(user);\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName))\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch(loadNotes())\r\n\r\n            }else{\r\n                setIsLoggedIn(false)\r\n            }\r\n            setChecking(false)\r\n        })\r\n       \r\n    }, [dispatch]);\r\n\r\n\r\n    if(checking){\r\n        return (\r\n            <div className=\"auth__main\">\r\n                <div className=\"sk-fading-circle\">\r\n                    <div className=\"sk-circle1 sk-circle\"></div>\r\n                    <div className=\"sk-circle2 sk-circle\"></div>\r\n                    <div className=\"sk-circle3 sk-circle\"></div>\r\n                    <div className=\"sk-circle4 sk-circle\"></div>\r\n                    <div className=\"sk-circle5 sk-circle\"></div>\r\n                    <div className=\"sk-circle6 sk-circle\"></div>\r\n                    <div className=\"sk-circle7 sk-circle\"></div>\r\n                    <div className=\"sk-circle8 sk-circle\"></div>\r\n                    <div className=\"sk-circle9 sk-circle\"></div>\r\n                    <div className=\"sk-circle10 sk-circle\"></div>\r\n                    <div className=\"sk-circle11 sk-circle\"></div>\r\n                    <div className=\"sk-circle12 sk-circle\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div>\r\n                <Routes>\r\n                    <Route \r\n                        path=\"/jounalApp/auth/*\"\r\n                        element={ \r\n                        !isLoggedIn \r\n                        ?\r\n                        <AuthRouter/> \r\n                        :\r\n                        <JournalScreen/>\r\n                    }\r\n                    />\r\n\r\n                    <Route \r\n                        path=\"/journalApp/\"\r\n                        element={ \r\n                        isLoggedIn\r\n                        ?\r\n                        <JournalScreen/>\r\n                        :\r\n                        <div className='auth__main'>\r\n                            <div className=\"auth__box-container\">\r\n                                <LoginScreen/>\r\n                            </div>\r\n\r\n                        </div>\r\n                    }\r\n                    />\r\n                     <Route path=\"/\" element={<Navigate to=\"/journalApp/\" />} />\r\n\r\n\r\n                </Routes>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import { types } from \"../types\";\r\nconst initialState = { \r\n    notes: [], \r\n    active: null\r\n }\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.noteAddNew:\r\n            return {\r\n                ...state,\r\n                notes : [...state.notes, action.payload]\r\n            };\r\n        case types.noteActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes : [...action.payload]\r\n            }\r\n        case types.noteUpdate :\r\n            return {\r\n                ...state,\r\n                notes : state.notes.map( \r\n                    note => note.id === action.payload.id \r\n                    ? action.payload.note \r\n                    : note)\r\n            }\r\n        case types.noteDelete :\r\n            return {\r\n                ...state,\r\n                active : null,\r\n                notes : state.notes.filter(\r\n                    note => note.id !== action.payload\r\n                )\r\n            }\r\n        default: return state;\r\n    }\r\n} ","import { types } from \"../types\";\r\n\r\nconst initialState = {\r\n    loading : false,\r\n    msgError : null\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.uiSetError:\r\n            \r\n            return {\r\n                ...state,\r\n                msgError : action.payload\r\n            }\r\n\r\n        case types.uiRemoveError :\r\n\r\n            return {\r\n                ...state,\r\n                msgError : null\r\n            }\r\n        \r\n        case types.uiStartLoading :\r\n\r\n            return {\r\n                ...state,\r\n                loading : true\r\n            }\r\n        case types.uiFinishLoading : \r\n            \r\n            return {\r\n                ...state,\r\n                loading : false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose; //para poder utilizar varios middlewares en el store\r\n\r\nconst reducers = combineReducers({\r\n    auth : authReducer,\r\n    ui : uiReducer,\r\n    notes : notesReducer\r\n})\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import { types } from '../types';\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            };\r\n        case types.logout:\r\n            return {};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store';\r\n\r\nexport const App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { App } from './App';\r\nimport './styles/styles.scss'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}